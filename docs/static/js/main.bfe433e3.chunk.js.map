{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEDJ,EAAWK,OAAOC,OAAQ,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAMd,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAnBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,iDAEoCC,UAAUH,GAF9C,sDAGCI,MAAOF,GAHR,cAGZG,EAHY,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVxB,kBAcXM,GAdW,4CAAF,sDCGPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAG/B,OACI,sBAAKc,UAAW,0CAAhB,UACG,qBAAKC,IAAMf,EAAKgB,IAAKN,IACrB,8BAAIA,EAAJ,WCFEO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAKrB,ECRwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAIGqB,EDbsBK,CAAa1B,GAA9Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAGnB,OACI,qCACA,qBAAIJ,UAAW,qCAAf,cAAsDhB,EAAtD,OAECoB,GAAW,mBAAGJ,UAAU,oCAAb,qBAEZ,qBAAKA,UAAW,YAAhB,SAISH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEKA,GADCA,EAAIC,aErBlBgB,EAAe,WAGxB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADJA,Y,MCf1B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.bfe433e3.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n\r\n     if (inputValue.trim().length >2 ){\r\n        setCategories(cats => [ inputValue ,...cats] );\r\n        setinputValue('');\r\n     }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs =async (category)=>{\r\n         \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=a6FIV4okfseJnL4K3cGE6tNqiYt8N6wg`;\r\n    const resp = await fetch (url);\r\n    const {data}  = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}\r\n","import React from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n\r\n  \r\n    return (\r\n        <div className= \"card animate__animated animate__fadeIn \">\r\n           <img src= {url} alt={title}/>\r\n           <p>{title} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n//GifGridItem.propTypes = {}\r\n\r\n//export default GifGridItem\r\n","\r\nimport React from 'react'\r\nimport {useFetchGifs} from '../hooks/useFetchGifs'\r\n//import { getGifs } from '../helpers/getGifs'\r\nimport {GifGridItem} from './GifGridItem'\r\n//import PropTypes from 'prop-types'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([])\r\n\r\n    //AQUI USARE MI CUSTOM HOOKS\r\n    const {data:images,loading}= useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className =\"animate__animated animate__fadeIn \"> {category} </h3>   \r\n\r\n        {loading && <p className=\"animate__animated animate__flash \" >Loading</p>}\r\n\r\n        <div className= \"card-grid\">\r\n         \r\n        \r\n             {\r\n                 images.map(img => (\r\n                     <GifGridItem \r\n                     key= {img.id}\r\n                     { ...img} \r\n                     />\r\n                 )) \r\n             }\r\n         \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n//GifGrid.propTypes = {}\r\n\r\n//export default GifGrid\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n//import PropTypes from 'prop-types'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n\r\n            });\r\n    }, [category])\r\n\r\n\r\n\r\n    return state; //{ data: [], loading: true };\r\n\r\n}\r\n\r\n//useFetchGifs.propTypes = {}\r\n\r\n//export default useFetchGifs","import React,{useState} from 'react'\r\nimport {AddCategory}  from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid';\r\n//import PropTypes from 'prop-types'\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Lady Gaga','Henry Cavill']\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories} />\r\n        <hr/>\r\n\r\n        <ol>\r\n            {\r\n                categories.map(category =>(\r\n                    <GifGrid \r\n                    key= {category}\r\n                    category={category}\r\n                    />\r\n                ))\r\n            }\r\n           \r\n        </ol>\r\n    \r\n        </>\r\n    )\r\n}\r\n\r\n//GifExpertApp.propTypes = {}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}